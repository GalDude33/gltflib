language: python
script: scripts/run_tests.sh
branches:
  only:
    - master
    - travis-test
python:
  - "3.6"
  - "3.7"
  - "3.8"
env:
  # Perform a test run on earliest supported versions of dataclasses and dataclasses-json (as specified in setup.py).
  # If tests fail, and it's non-trivial to fix, then we will need to manually determine the new minimum required
  # version of each library. Once these are determined, bump the versions here and in setup.py.
  - DATACLASSES_JSON_VERSION=0.2.2
  # Perform another test run on latest available versions of those same libraries. This will need to be updated manually
  # as new versions become available.
  - DATACLASSES_JSON_VERSION=0.3.8
install:
  # Install original requirements (as specified in requirements.txt)
  - pip install -q -r requirements.txt
  # Override versions of dataclasses and dataclasses-json libraries with the versions specified in the current test run
  - pip install -q dataclasses-json==$DATACLASSES_JSON_VERSION
  - |
    if [ $TRAVIS_PYTHON_VERSION == "3.6" ]; then
      pip install -q dataclasses==$DATACLASSES_VERSION
    fi
jobs:
  # TODO: In Python >= 3.7, dataclasses are built in rather than being a package. Seems the package is still available
  # and can be installed (not sure of the ramifications of this). However, only 0.6 is available. Version 0.7 fails
  # with the following error:
  # https://travis-ci.com/sergkr/gltflib/jobs/288118259
  # Need to figure out a way we can continue testing in Python 3.6 with both dataclasses=0.6 and dataclasses=0.7, but
  # exclude the package altogether if running in Python >= 3.7.
  # In requirements.txt, this is possible with environment markers:
  # https://www.python.org/dev/peps/pep-0496/
  # So the line for dataclasses in requirements.txt can be replaced as follows:
  # dataclasses==0.7; python_version < '3.7'
  # However, since we're actually installing dataclasses as a separate command, need to figure out a way to skip the
  # command depending on current Python version. Any way to get the current Python version via travis?
  # Might also be a possibility to exclude certain jobs from the build matrix:
  # https://docs.travis-ci.com/user/build-matrix/#excluding-jobs
  include:
  - python: 3.6
    env:
      - DATACLASSES_VERSION=0.6
      - DATACLASSES_VERSION=0.7
